<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://java.sun.com/xml/ns/javaee"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
  id="WebApp_ID" version="2.5">


  <display-name>Archetype Created Web Application</display-name>

  <!-- Spring Beans 配置文件 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- 配置Spring Dispatcher Servlet-->
  <servlet>
    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springMVC-servlet.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!-- 错误页面映射 -->
  <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/views/404.jsp</location>
  </error-page>
  <error-page>
    <error-code>400</error-code>
    <location>/WEB-INF/views/400.jsp</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/WEB-INF/views/500.jsp</location>
  </error-page>
  <error-page>
    <error-code>503</error-code>
    <location>/WEB-INF/views/503.jsp</location>
  </error-page>
  <error-page>
    <exception-type>java.lang.Exception</exception-type>
    <location>/WEB-INF/views/error.jsp</location>
  </error-page>

  <!-- 设置字符过滤器，防止乱码 -->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--header 过滤器-->
  <filter>
    <filter-name>HeaderFilter</filter-name>
    <filter-class>com.paradisecloud.web.filter.HeaderFilter</filter-class><!--你过滤器的包 -->
  </filter>
  <filter-mapping>
    <filter-name>HeaderFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!--登录过滤器-->
  <filter>
    <filter-name>LoginFilter</filter-name>
    <filter-class>com.paradisecloud.web.filter.LoginFilter</filter-class>
    <init-param>
      <param-name>targetFilterLifecycle</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>exclusionUrls</param-name>
      <param-value>
        /login,
        /client/token,
        /client/devConfig,
        /client/conferences,
        /client/conference
      </param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>LoginFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--权限控制过滤器-->
  <filter>
    <filter-name>aclControlFilter</filter-name>
    <filter-class>com.paradisecloud.web.filter.AclControlFilter</filter-class>
    <init-param>
      <param-name>targetFilterLifecycle</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>exclusionUrls</param-name>
      <param-value>
        /login,
        /client/token,
        /client/devConfig,
        /client/conferences,
        /client/conference
      </param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>aclControlFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--权限控制过滤器-->
  <filter>
    <filter-name>timeCostFilter</filter-name>
    <filter-class>com.paradisecloud.web.filter.RequestTimeCostFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>timeCostFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- 经常需要排除一些不必要的url，比如.js,/jslib/等等。配置在init-param中。比如 -->
  <filter>
    <filter-name>DruidWebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <init-param>
      <param-name>exclusions</param-name>
      <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>DruidWebStatFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- druid的Servlet -->
  <servlet>
    <servlet-name>DruidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>DruidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>

</web-app>
